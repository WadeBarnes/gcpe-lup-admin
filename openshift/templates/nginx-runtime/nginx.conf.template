worker_processes  auto;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    # ip filtering
    %IpFilterRules%

    geo $loggable {
        default 1;
        %RealIpFrom% 0;
    }

    # Use a w3c standard log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main if=$loggable;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #real_ip module
    set_real_ip_from %RealIpFrom%;
    %AdditionalRealIpFromRules%
    real_ip_recursive on;
    real_ip_header    X-Forwarded-For;

    #throttle zones
    limit_req_zone $binary_remote_addr zone=bra1:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=bra3:10m rate=3r/s;
    limit_req_zone $binary_remote_addr zone=bra5:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=bra25:10m rate=25r/s;
    limit_req_zone $binary_remote_addr zone=bra100:10m rate=100r/s;

    #default throttle; not inherited if set in nested level
    limit_req zone=bra5 burst=100;

    client_max_body_size 100m;

    server {
    listen       8080 default_server;
    server_name  localhost;

    # add in most common security headers
    add_header Content-Security-Policy "default-src * data: blob: filesystem: 'unsafe-inline' 'unsafe-eval'";
    add_header Strict-Transport-Security "max-age=86400; includeSubDomains";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection 1;
    add_header X-Frame-Options DENY;
    add_header X-UA-Compatible "IE=Edge,chrome=1";

    # serve our angular app here
    location / {
	        root   /tmp/app/dist/dist;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
            gzip            on;
            gzip_min_length 1000;
            gzip_types      *;

            sendfile off;
            expires -1;

            # propagate SMGOV_* headers
            add_header  SMGOV_USERGUID $http_smgov_userguid;
            add_header  SMGOV_USERDISPLAYNAME  $http_smgov_userdisplayname;
            add_header  SMGOV_USERTYPE  $http_smgov_usertype;
            add_header  SMGOV_USERIDENTIFIER  $http_smgov_useridentifier;			
           }
    
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

}
